# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2017-01-09 19:24
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the institution', max_length=300)),
                ('street', models.TextField(max_length=255)),
                ('city', models.CharField(max_length=40)),
                ('province', models.CharField(max_length=80)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=80)),
                ('contact_name', models.CharField(max_length=70)),
                ('contact_phone', models.CharField(max_length=15)),
                ('contact_email', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer_name', models.CharField(help_text='The name given to the instrument by the manufacturer', max_length=300)),
                ('short_name', models.CharField(blank=True, help_text='The short, general name for the instrument. IE: ctd, fluorometer', max_length=50, null=True)),
                ('long_name', models.CharField(blank=True, help_text='The official, standard name for the instrument if relevant', max_length=300, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=300, null=True)),
                ('serial', models.CharField(blank=True, max_length=300, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentOnPlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(help_text='The date the instrument was put on the platform')),
                ('end_date', models.DateTimeField(blank=True, help_text='The date the instrument was removed from the platform', null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('instrument', models.ForeignKey(help_text='The instrument that was put on a platform', on_delete=django.db.models.deletion.CASCADE, to='website.Instrument')),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The colloquial name for the platform', max_length=300)),
                ('manufacturer_name', models.CharField(help_text='The formal manufacturer name for the platform', max_length=300, null=True)),
                ('serial_number', models.CharField(max_length=300)),
                ('purchase_date', models.DateTimeField(blank=True, null=True)),
                ('institution', models.ForeignKey(help_text='The institution who owns the platform', on_delete=django.db.models.deletion.CASCADE, to='website.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='PlatformDeployment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('deployment_name', models.CharField(max_length=150)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField()),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Platform')),
            ],
        ),
        migrations.CreateModel(
            name='PlatformType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=300)),
                ('manufacturer', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer_name', models.CharField(help_text='The name given to the instrument by the manufacturer. ie: sci_water_temp', max_length=300)),
                ('short_name', models.CharField(blank=True, help_text='The short, general name for the sensor. IE: temperature', max_length=50, null=True)),
                ('long_name', models.CharField(blank=True, help_text='The official, standard name for the instrument. IE: sea_water_temperature. See CF naming: http://cfconventions.org/Data/cf-standard-names/39/build/cf-standard-name-table.html', max_length=300, null=True)),
                ('units', models.CharField(blank=True, max_length=30, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.Instrument')),
            ],
        ),
        migrations.AddField(
            model_name='platform',
            name='platform_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.PlatformType'),
        ),
        migrations.AddField(
            model_name='instrumentonplatform',
            name='platform',
            field=models.ForeignKey(help_text='The platform that the instrument was put on', on_delete=django.db.models.deletion.CASCADE, to='website.Platform'),
        ),
    ]
