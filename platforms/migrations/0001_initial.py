# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2018-11-02 19:57
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('general', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the platform', max_length=300)),
                ('wmo_id', models.IntegerField(blank=True, help_text="The WMO ID for the mission. See: <a href='http://www.jcomm.info/index.php?option=com_oe&task=viewGroupRecord&groupID=155'>WMO Contact Info</a> to acquire", null=True)),
                ('serial_number', models.CharField(max_length=300)),
                ('purchase_date', models.DateTimeField(blank=True, null=True)),
                ('institution', models.ForeignKey(help_text='The institution who owns the platform', on_delete=django.db.models.deletion.CASCADE, to='general.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='PlatformComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(help_text='This is a good place to log any problems or changes with a platform')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlatformCommentBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='platforms.Platform')),
            ],
        ),
        migrations.CreateModel(
            name='PlatformDeployment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wmo_id', models.IntegerField(blank=True, help_text="The WMO ID for the mission. See: <a href='http://www.jcomm.info/index.php?option=com_oe&task=viewGroupRecord&groupID=155'>WMO Contact Info</a> to acquire", null=True)),
                ('deployment_number', models.IntegerField(blank=True, null=True)),
                ('platform_name', models.CharField(blank=True, help_text='Name of platform.', max_length=500, null=True)),
                ('title', models.CharField(help_text='A short descriptive title for the deployment.', max_length=500)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('testing_mission', models.BooleanField(default=False, help_text='if this is testing mission, check this.')),
                ('comment', models.TextField(blank=True, help_text='The general comments for the deployment.', null=True)),
                ('acknowledgement', models.CharField(blank=True, help_text='<b>Example:</b> This deployment is supported by funding from NOAA', max_length=900, null=True)),
                ('contributor_name', models.TextField(blank=True, help_text='A comma separated list of contributors to this data set<br><b>Example:</b> "Jerry Garcia, Bob Weir, Bill Graham"', null=True)),
                ('contributor_role', models.TextField(blank=True, help_text='A comma separated list of the roles for those specified in the contributor_name attribute<br><b>Example:</b> "Principal Investigator, Principal Investigator, Data Manager"', null=True)),
                ('creator_email', models.TextField(blank=True, help_text='The email of person collected data.', null=True)),
                ('creator_name', models.TextField(blank=True, help_text='A comma separated of names of the person who collected the data.', null=True)),
                ('creator_url', models.TextField(blank=True, help_text='A comma separated of URLs for the person who collected the data.', null=True)),
                ('data_repository_link', models.CharField(blank=True, help_text="URL for the repository from:  <a href='http://belafonte.ocean.dal.ca:8080/erddap/index.html'>Erddap</a>.", max_length=150, null=True)),
                ('publisher_email', models.CharField(blank=True, help_text='E-mail address of the publisher of the data.', max_length=150, null=True)),
                ('publisher_name', models.CharField(blank=True, help_text='Name of the publisher of the data.', max_length=150, null=True)),
                ('publisher_url', models.CharField(blank=True, help_text='A URL for the publisher of the data.', max_length=150, null=True)),
                ('metadata_link', models.CharField(blank=True, help_text='This attribute provides a link to a complete metadata record for this data set or the collection that contains this data set.', max_length=150, null=True)),
                ('references', models.TextField(blank=True, help_text='Published or web-based references that describe the data or methods used to produce it.', null=True)),
                ('sea_name', models.CharField(default='North Atlantic Ocean', help_text="The sea in which the study is being conducted: <a href='https://www.nodc.noaa.gov/General/NODC-Archive/seanamelist.txt'>Sea Names</a>", max_length=300)),
                ('latitude', models.FloatField(blank=True, help_text='The latitude of the deployment', null=True)),
                ('longitude', models.FloatField(blank=True, help_text='The longitude of the deployment', null=True)),
                ('depth', models.FloatField(blank=True, help_text='The depth of the deployment', null=True)),
                ('institution', models.ForeignKey(help_text='The institution responsible for the deployment.', on_delete=django.db.models.deletion.PROTECT, to='general.Institution')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platforms.Platform')),
            ],
        ),
        migrations.CreateModel(
            name='PlatformDeploymentComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(help_text='Comments')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlatformDeploymentCommentBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_deployment', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='platforms.PlatformDeployment')),
            ],
        ),
        migrations.CreateModel(
            name='PlatformPowerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Power source of this deployment', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='PlatformType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=300)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='general.Manufacturer')),
            ],
        ),
        migrations.AddField(
            model_name='platformdeploymentcomment',
            name='platform_deployment_comment_box',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platforms.PlatformDeploymentCommentBox'),
        ),
        migrations.AddField(
            model_name='platformdeploymentcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='platformdeployment',
            name='power_type',
            field=models.ForeignKey(blank=True, help_text='The battery type which was using in this deployment.', null=True, on_delete=django.db.models.deletion.PROTECT, to='platforms.PlatformPowerType'),
        ),
        migrations.AddField(
            model_name='platformdeployment',
            name='project',
            field=models.ForeignKey(help_text='The project the data is being collected under.', on_delete=django.db.models.deletion.PROTECT, to='general.Project'),
        ),
        migrations.AddField(
            model_name='platformcomment',
            name='platform_comment_box',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platforms.PlatformCommentBox'),
        ),
        migrations.AddField(
            model_name='platformcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='platform',
            name='platform_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platforms.PlatformType'),
        ),
    ]
